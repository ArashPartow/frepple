name: Build Ubuntu18

on:
  push:
  pull_request:

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: frepple
          POSTGRES_PASSWORD: frepple
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Chcking out source code
        uses: actions/checkout@v2

      - name: Set up Nodes
        uses: actions/setup-node@v2

      - name: Install packages
        run: |
          sudo apt-get install libxerces-c-dev openssl libssl-dev libpq5 libpq-dev postgresql-client python3 python3-dev python3-psycopg2 python3-setuptools
          npm install
          sudo -H python3 -m pip install --upgrade pip
          sudo -H pip3 install -r "${{github.workspace}}/requirements.dev.txt"

      #    - name: Commit changes
      #      uses: elstudio/actions-js-build/commit@v4
      #      with:
      #        commitMessage: Grunt to compile and minify css and javascript files
      #      - name: Commit changes
      #        uses: EndBug/add-and-commit@v7
      #        with:
      #          author_name: Your Name
      #          author_email: mail@example.com
      #          message: 'Your commit message'
      #          add: '*.js'

      - name: Build
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target package
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target doc

      - name: Test
        working-directory: ${{github.workspace}}
        run: |
          sed -i "s/\"HOST\":.\"\"/\"HOST\":\"localhost\"/g" djangosettings.py
          sed -i "s/\"PORT\":.\"\"/\"PORT\":\"${{ job.services.postgres.ports[5432] }}\"/g" djangosettings.py
          ./test/runtest.py --regression
          ./frepplectl.py test freppledb --verbosity=2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

      - name: Publish release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ steps.get_version.outputs.tag }} Community Edition"
          body: |
            **frepple-${{ steps.get_version.outputs.tag }}-doc.tgz**\: Documentation
            **ubuntu18-frepple-${{ steps.get_version.outputs.tag }}.deb**\: Installer for Ubuntu 18.04 LTS
            **docker container**\: Pull ghcr.io/frepple/frepple:${{ steps.get_version.outputs.tag }}
            **Source code**\: Source code in code zip or gzip format

            Release notes are available on https://frepple.org/docs/current/release-notes.html
          files: |
            "${{github.workspace}}/build/contrib/docker*.deb"
            "${{github.workspace}}/build/frepple-doc-*.tgz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
